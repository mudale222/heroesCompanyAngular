<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net5.0</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>

    <!-- Set this to true if you enable server-side prerendering -->
    <BuildServerSideRenderer>false</BuildServerSideRenderer>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="AutoMapper.Extensions.Microsoft.DependencyInjection" Version="8.1.1" />
    <PackageReference Include="log4net" Version="2.0.12" />
    <PackageReference Include="Microsoft.AspNetCore.Antiforgery" Version="2.2.0" />
    <PackageReference Include="Microsoft.AspNetCore.ApiAuthorization.IdentityServer" Version="5.0.6" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="5.0.6" />
    <PackageReference Include="Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore" Version="5.0.6" />
    <PackageReference Include="Microsoft.AspNetCore.Identity.EntityFrameworkCore" Version="5.0.6" />
    <PackageReference Include="Microsoft.AspNetCore.Identity.UI" Version="5.0.6" />
    <PackageReference Include="Microsoft.EntityFrameworkCore" Version="5.0.6" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Relational" Version="5.0.6" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="5.0.6" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="5.0.6">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="5.0.2" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Compile Remove="Presentation\.git\**" />
    <Compile Remove="Presentation\src\app\shared\modal\modal\**" />
    <Content Remove="$(SpaRoot)**" />
    <Content Remove="Presentation\.git\**" />
    <Content Remove="Presentation\src\app\shared\modal\modal\**" />
    <EmbeddedResource Remove="Presentation\.git\**" />
    <EmbeddedResource Remove="Presentation\src\app\shared\modal\modal\**" />
    <None Remove="$(SpaRoot)**" />
    <None Remove="Presentation\.git\**" />
    <None Remove="Presentation\src\app\shared\modal\modal\**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <Compile Remove="BLL\Controllers\OidcConfigurationController.cs" />
    <Compile Remove="BLL\Controllers\WeatherForecastController.cs" />
  </ItemGroup>

  <ItemGroup>
    <None Include="Presentation\angular.json" />
    <None Include="Presentation\e2e\tsconfig.json" />
    <None Include="Presentation\package-lock.json" />
    <None Include="Presentation\package.json" />
    <None Include="Presentation\src\angular.json" />
    <None Include="Presentation\src\package-lock.json" />
    <None Include="Presentation\src\package.json" />
    <None Include="Presentation\src\tsconfig.app.json" />
    <None Include="Presentation\src\tsconfig.json" />
    <None Include="Presentation\src\tsconfig.server.json" />
    <None Include="Presentation\src\tsconfig.spec.json" />
    <None Include="Presentation\src\tslint %282%29.json" />
    <None Include="Presentation\src\tslint.json" />
    <None Include="Presentation\tsconfig.app.json" />
    <None Include="Presentation\tsconfig.json" />
    <None Include="Presentation\tsconfig.spec.json" />
    <None Include="Presentation\tslint.json" />
  </ItemGroup>

  <ItemGroup>
    <Content Update="BLL\Logger\log4net.config">
      <CopyToOutputDirectory> // Log some things
            log.Info("Hello logging world!");
            log.Error("Error!");
            log.Warn("Warn!");</CopyToOutputDirectory>
    </Content>
  </ItemGroup>

  <ItemGroup>
    <Folder Include="BLL\ControllersServices\" />
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
      <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>
